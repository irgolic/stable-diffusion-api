components:
  schemas:
    AuthToken:
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
      required:
      - access_token
      - token_type
      title: AuthToken
      type: object
    Body_login_access_token_token_post:
      properties:
        client_id:
          title: Client Id
          type: string
        client_secret:
          title: Client Secret
          type: string
        grant_type:
          pattern: password
          title: Grant Type
          type: string
        password:
          title: Password
          type: string
        scope:
          default: ''
          title: Scope
          type: string
        username:
          title: Username
          type: string
      required:
      - username
      - password
      title: Body_login_access_token_token_post
      type: object
    Body_post_blob_blob_post:
      properties:
        blob_data:
          format: binary
          title: Blob Data
          type: string
      required:
      - blob_data
      title: Body_post_blob_blob_post
      type: object
    CancelledEvent:
      properties:
        event_type:
          enum:
          - cancelled
          title: Event Type
          type: string
        reason:
          title: Reason
          type: string
        task_id:
          title: Task Id
          type: string
      required:
      - event_type
      - task_id
      - reason
      title: CancelledEvent
      type: object
    FinishedEvent:
      properties:
        event_type:
          enum:
          - finished
          title: Event Type
          type: string
        image:
          $ref: '#/components/schemas/GeneratedImage'
        task_id:
          title: Task Id
          type: string
      required:
      - event_type
      - task_id
      - image
      title: FinishedEvent
      type: object
    GeneratedImage:
      properties:
        blob_id:
          title: Blob Id
          type: string
        parameters_used:
          anyOf:
          - $ref: '#/components/schemas/Txt2ImgParams'
          - $ref: '#/components/schemas/Img2ImgParams'
          title: Parameters Used
      required:
      - blob_id
      - parameters_used
      title: GeneratedImage
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Img2ImgParams:
      properties:
        guidance:
          default: 7.5
          description: 'Higher guidance encourages generation closely linked to `prompt`,
            usually at the expense of lower image quality. Try using more steps to
            improve image quality when using high guidance. Guidance is disabled by
            setting `guidance` to `1`. `guidance` is defined as `w` of equation 2.
            of [ImagenPaper](https://arxiv.org/pdf/2205.11487.pdf). See also: [Classifier-Free
            Diffusion Guidance](https://arxiv.org/abs/2207.12598).'
          minimum: 1.0
          title: Guidance
          type: number
        initial_image:
          description: 'The image to use as input for image generation. The image
            must have a width and height divisible by 8. '
          title: Initial Image
          type: string
        model_id:
          default: CompVis/stable-diffusion-v1-4
          description: The model to use for image generation, e.g. 'CompVis/stable-diffusion-v1-4'.
          title: Model Id
          type: string
        model_provider:
          default: huggingface
          description: The model provider to look up `model_id`. Currently only 'huggingface'
            is supported.
          enum:
          - huggingface
          title: Model Provider
          type: string
        negative_prompt:
          description: The prompt to dissuade image generation. Ignored when not using
            guidance (i.e., if `guidance` is `1`).
          title: Negative Prompt
          type: string
        prompt:
          description: The prompt to guide image generation.
          title: Prompt
          type: string
        safety_filter:
          default: true
          description: Ensure that you abide by the conditions of the Stable Diffusion
            license and do not expose unfiltered results in services or applications
            open to the public. For more information, please see https://github.com/huggingface/diffusers/pull/254
          title: Safety Filter
          type: boolean
        scheduler:
          default: plms
          description: The scheduler to use for image generation. Currently only 'plms',
            'ddim', and 'k-lms', are supported.
          enum:
          - plms
          - ddim
          - k-lms
          title: Scheduler
          type: string
        steps:
          default: 20
          description: The number of denoising steps. More denoising steps usually
            lead to a higher quality image at the expense of slower inference.
          title: Steps
          type: integer
        strength:
          default: 0.8
          description: Conceptually, indicates how much to transform the image. The
            image will be used as a starting point, adding more noise to it the larger
            the `strength`. The number of denoising steps depends on the amount of
            noise initially added. When `strength` is 1, it becomes pure noise, and
            the denoising process will run for the full number of iterations specified
            in `steps`. A value of 1, therefore, works like Txt2Img, essentially ignoring
            the reference image.
          maximum: 1.0
          minimum: 0.0
          title: Strength
          type: number
        task_type:
          default: img2img
          enum:
          - img2img
          title: Task Type
          type: string
      required:
      - prompt
      - initial_image
      title: Img2ImgParams
      type: object
    PendingEvent:
      properties:
        event_type:
          enum:
          - pending
          title: Event Type
          type: string
        task_id:
          title: Task Id
          type: string
      required:
      - event_type
      - task_id
      title: PendingEvent
      type: object
    StartedEvent:
      properties:
        event_type:
          enum:
          - started
          title: Event Type
          type: string
        task_id:
          title: Task Id
          type: string
      required:
      - event_type
      - task_id
      title: StartedEvent
      type: object
    Txt2ImgParams:
      properties:
        guidance:
          default: 7.5
          description: 'Higher guidance encourages generation closely linked to `prompt`,
            usually at the expense of lower image quality. Try using more steps to
            improve image quality when using high guidance. Guidance is disabled by
            setting `guidance` to `1`. `guidance` is defined as `w` of equation 2.
            of [ImagenPaper](https://arxiv.org/pdf/2205.11487.pdf). See also: [Classifier-Free
            Diffusion Guidance](https://arxiv.org/abs/2207.12598).'
          minimum: 1.0
          title: Guidance
          type: number
        height:
          default: 512
          description: The pixel height of the generated image.
          title: Height
          type: integer
        model_id:
          default: CompVis/stable-diffusion-v1-4
          description: The model to use for image generation, e.g. 'CompVis/stable-diffusion-v1-4'.
          title: Model Id
          type: string
        model_provider:
          default: huggingface
          description: The model provider to look up `model_id`. Currently only 'huggingface'
            is supported.
          enum:
          - huggingface
          title: Model Provider
          type: string
        negative_prompt:
          description: The prompt to dissuade image generation. Ignored when not using
            guidance (i.e., if `guidance` is `1`).
          title: Negative Prompt
          type: string
        prompt:
          description: The prompt to guide image generation.
          title: Prompt
          type: string
        safety_filter:
          default: true
          description: Ensure that you abide by the conditions of the Stable Diffusion
            license and do not expose unfiltered results in services or applications
            open to the public. For more information, please see https://github.com/huggingface/diffusers/pull/254
          title: Safety Filter
          type: boolean
        scheduler:
          default: plms
          description: The scheduler to use for image generation. Currently only 'plms',
            'ddim', and 'k-lms', are supported.
          enum:
          - plms
          - ddim
          - k-lms
          title: Scheduler
          type: string
        steps:
          default: 20
          description: The number of denoising steps. More denoising steps usually
            lead to a higher quality image at the expense of slower inference.
          title: Steps
          type: integer
        task_type:
          default: txt2img
          enum:
          - txt2img
          title: Task Type
          type: string
        width:
          default: 512
          description: The pixel width of the generated image.
          title: Width
          type: integer
      required:
      - prompt
      title: Txt2ImgParams
      type: object
    UserBase:
      properties:
        username:
          title: Username
          type: string
      required:
      - username
      title: UserBase
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: token
      type: oauth2
info:
  title: Stable Diffusion Server
  version: 0.1.0
openapi: 3.0.2
paths:
  /blob:
    post:
      operationId: post_blob_blob_post
      parameters:
      - in: query
        name: query_token
        required: false
        schema:
          title: Query Token
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_post_blob_blob_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Post Blob Blob Post
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Post Blob
  /blob/{blob_id}:
    get:
      operationId: get_blob_blob__blob_id__get
      parameters:
      - in: path
        name: blob_id
        required: true
        schema:
          title: Blob Id
          type: string
      - in: query
        name: query_token
        required: false
        schema:
          title: Query Token
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
            image/png: {}
          description: Successful Response
        '404':
          description: Blob not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Blob
  /task:
    post:
      operationId: create_task_task_post
      parameters:
      - in: query
        name: query_token
        required: false
        schema:
          title: Query Token
          type: string
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/Txt2ImgParams'
              - $ref: '#/components/schemas/Img2ImgParams'
              title: Parameters
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Create Task Task Post
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Task
  /task/{task_id}:
    get:
      operationId: poll_task_status_task__task_id__get
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          title: Task Id
          type: string
      - in: query
        name: query_token
        required: false
        schema:
          title: Query Token
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PendingEvent'
                - $ref: '#/components/schemas/StartedEvent'
                - $ref: '#/components/schemas/CancelledEvent'
                - $ref: '#/components/schemas/FinishedEvent'
                title: Response Poll Task Status Task  Task Id  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Poll Task Status
  /token:
    post:
      operationId: login_access_token_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_access_token_token_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login Access Token
  /token/all:
    post:
      operationId: public_access_token_token_all_post
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Successful Response
      summary: Public Access Token
  /txt2img:
    get:
      operationId: txt2img_txt2img_get
      parameters:
      - in: query
        name: task_type
        required: false
        schema:
          default: txt2img
          enum:
          - txt2img
          title: Task Type
          type: string
      - in: query
        name: model_id
        required: false
        schema:
          default: CompVis/stable-diffusion-v1-4
          title: Model Id
          type: string
      - in: query
        name: model_provider
        required: false
        schema:
          default: huggingface
          enum:
          - huggingface
          title: Model Provider
          type: string
      - in: query
        name: prompt
        required: true
        schema:
          title: Prompt
          type: string
      - in: query
        name: negative_prompt
        required: false
        schema:
          title: Negative Prompt
          type: string
      - in: query
        name: steps
        required: false
        schema:
          default: 20
          title: Steps
          type: integer
      - in: query
        name: guidance
        required: false
        schema:
          default: 7.5
          minimum: 1.0
          title: Guidance
          type: number
      - in: query
        name: scheduler
        required: false
        schema:
          default: plms
          enum:
          - plms
          - ddim
          - k-lms
          title: Scheduler
          type: string
      - in: query
        name: safety_filter
        required: false
        schema:
          default: true
          title: Safety Filter
          type: boolean
      - in: query
        name: width
        required: false
        schema:
          default: 512
          title: Width
          type: integer
      - in: query
        name: height
        required: false
        schema:
          default: 512
          title: Height
          type: integer
      - in: query
        name: query_token
        required: false
        schema:
          title: Query Token
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
            image/png: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Txt2Img
  /user/{username}:
    post:
      operationId: signup_user__username__post
      parameters:
      - in: path
        name: username
        required: true
        schema:
          title: Username
          type: string
      - in: query
        name: password
        required: true
        schema:
          title: Password
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBase'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signup
