components:
  schemas:
    AuthToken:
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
      required:
      - access_token
      - token_type
      title: AuthToken
      type: object
    Body_img2img_img2img_post:
      properties:
        image:
          $ref: '#/components/schemas/Image'
        parameters:
          $ref: '#/components/schemas/Img2ImgParams'
      required:
      - parameters
      - image
      title: Body_img2img_img2img_post
      type: object
    Body_login_access_token_token_post:
      properties:
        client_id:
          title: Client Id
          type: string
        client_secret:
          title: Client Secret
          type: string
        grant_type:
          pattern: password
          title: Grant Type
          type: string
        password:
          title: Password
          type: string
        scope:
          default: ''
          title: Scope
          type: string
        username:
          title: Username
          type: string
      required:
      - username
      - password
      title: Body_login_access_token_token_post
      type: object
    FinishedEvent:
      properties:
        event_type:
          enum:
          - finished
          title: Event Type
          type: string
        image:
          $ref: '#/components/schemas/GeneratedImage'
        task_id:
          title: Task Id
          type: string
      required:
      - event_type
      - task_id
      - image
      title: FinishedEvent
      type: object
    GeneratedImage:
      properties:
        blob_id:
          title: Blob Id
          type: string
        format:
          title: Format
          type: string
        link:
          title: Link
          type: string
        parameters_used:
          anyOf:
          - $ref: '#/components/schemas/Txt2ImgParams'
          - $ref: '#/components/schemas/Img2ImgParams'
          title: Parameters Used
      required:
      - blob_id
      - format
      - parameters_used
      - link
      title: GeneratedImage
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Image:
      properties:
        blob_id:
          title: Blob Id
          type: string
        format:
          title: Format
          type: string
      required:
      - blob_id
      - format
      title: Image
      type: object
    Img2ImgParams:
      properties:
        guidance:
          default: 7.5
          description: 'Higher guidance encourages generation closely linked to `prompt`,
            usually at the expense of lower image quality. Try using more steps to
            improve image quality when using high guidance. Guidance is disabled by
            setting `guidance` to `1`. `guidance` is defined as `w` of equation 2.
            of [ImagenPaper](https://arxiv.org/pdf/2205.11487.pdf). See also: [Classifier-Free
            Diffusion Guidance](https://arxiv.org/abs/2207.12598).'
          minimum: 1.0
          title: Guidance
          type: number
        model_id:
          default: CompVis/stable-diffusion-v1-4
          description: The model to use for image generation, e.g. 'CompVis/stable-diffusion-v1-4'.
          title: Model Id
          type: string
        model_repository:
          default: huggingface
          description: The model repository to look up `model_id` in. Currently only
            'huggingface' is supported.
          enum:
          - huggingface
          title: Model Repository
          type: string
        negative_prompt:
          description: The prompt to dissuade image generation. Ignored when not using
            guidance (i.e., if `guidance` is `1`).
          title: Negative Prompt
          type: string
        num_images:
          default: 1
          description: The number of images to generate.
          title: Num Images
          type: integer
        prompt:
          description: The prompt to guide image generation.
          title: Prompt
          type: string
        scheduler:
          default: plms
          description: The scheduler to use for image generation. Currently only 'plms',
            'ddim', and 'k-lms', are supported.
          enum:
          - plms
          - ddim
          - k-lms
          title: Scheduler
          type: string
        seed:
          description: The randomness seed to use for image generation. If not set,
            a random seed is used.
          title: Seed
          type: integer
        steps:
          default: 20
          description: The number of denoising steps. More denoising steps usually
            lead to a higher quality image at the expense of slower inference.
          title: Steps
          type: integer
        strength:
          default: 0.8
          description: Conceptually, indicates how much to transform the image. The
            image will be used as a starting point, adding more noise to it the larger
            the `strength`. The number of denoising steps depends on the amount of
            noise initially added. When `strength` is 1, it becomes pure noise, and
            the denoising process will run for the full number of iterations specified
            in `steps`. A value of 1, therefore, works like Txt2Img, essentially ignoring
            the reference image.
          maximum: 1.0
          minimum: 0.0
          title: Strength
          type: number
      required:
      - prompt
      title: Img2ImgParams
      type: object
    Model:
      properties:
        author:
          title: Author
          type: string
        description:
          title: Description
          type: string
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
      required:
      - id
      - name
      - description
      - author
      title: Model
      type: object
    PendingEvent:
      properties:
        event_type:
          enum:
          - pending
          title: Event Type
          type: string
        task_id:
          title: Task Id
          type: string
      required:
      - event_type
      - task_id
      title: PendingEvent
      type: object
    StartedEvent:
      properties:
        event_type:
          enum:
          - started
          title: Event Type
          type: string
        task_id:
          title: Task Id
          type: string
      required:
      - event_type
      - task_id
      title: StartedEvent
      type: object
    Txt2ImgParams:
      properties:
        guidance:
          default: 7.5
          description: 'Higher guidance encourages generation closely linked to `prompt`,
            usually at the expense of lower image quality. Try using more steps to
            improve image quality when using high guidance. Guidance is disabled by
            setting `guidance` to `1`. `guidance` is defined as `w` of equation 2.
            of [ImagenPaper](https://arxiv.org/pdf/2205.11487.pdf). See also: [Classifier-Free
            Diffusion Guidance](https://arxiv.org/abs/2207.12598).'
          minimum: 1.0
          title: Guidance
          type: number
        height:
          default: 512
          description: The pixel height of the generated image.
          title: Height
          type: integer
        model_id:
          default: CompVis/stable-diffusion-v1-4
          description: The model to use for image generation, e.g. 'CompVis/stable-diffusion-v1-4'.
          title: Model Id
          type: string
        model_repository:
          default: huggingface
          description: The model repository to look up `model_id` in. Currently only
            'huggingface' is supported.
          enum:
          - huggingface
          title: Model Repository
          type: string
        negative_prompt:
          description: The prompt to dissuade image generation. Ignored when not using
            guidance (i.e., if `guidance` is `1`).
          title: Negative Prompt
          type: string
        num_images:
          default: 1
          description: The number of images to generate.
          title: Num Images
          type: integer
        prompt:
          description: The prompt to guide image generation.
          title: Prompt
          type: string
        scheduler:
          default: plms
          description: The scheduler to use for image generation. Currently only 'plms',
            'ddim', and 'k-lms', are supported.
          enum:
          - plms
          - ddim
          - k-lms
          title: Scheduler
          type: string
        seed:
          description: The randomness seed to use for image generation. If not set,
            a random seed is used.
          title: Seed
          type: integer
        steps:
          default: 20
          description: The number of denoising steps. More denoising steps usually
            lead to a higher quality image at the expense of slower inference.
          title: Steps
          type: integer
        width:
          default: 512
          description: The pixel width of the generated image.
          title: Width
          type: integer
      required:
      - prompt
      title: Txt2ImgParams
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: token
      type: oauth2
info:
  title: Stable Diffusion Server
  version: 0.1.0
openapi: 3.0.2
paths:
  /img2img:
    post:
      operationId: img2img_img2img_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_img2img_img2img_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Img2Img Img2Img Post
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Img2Img
  /models:
    get:
      operationId: models_models_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                title: Response Models Models Get
                type: array
          description: Successful Response
      summary: Models
  /task/{task_id}:
    get:
      operationId: poll_task_status_task__task_id__get
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          title: Task Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PendingEvent'
                - $ref: '#/components/schemas/StartedEvent'
                - $ref: '#/components/schemas/FinishedEvent'
                title: Response Poll Task Status Task  Task Id  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Poll Task Status
  /token:
    post:
      operationId: login_access_token_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_access_token_token_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login Access Token
  /token/all:
    post:
      operationId: public_access_token_token_all_post
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Successful Response
      summary: Public Access Token
  /txt2img:
    post:
      operationId: txt2img_txt2img_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Txt2ImgParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Txt2Img Txt2Img Post
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Txt2Img
